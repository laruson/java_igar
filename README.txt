Каждая задача должна находится в отдельном пакете																									

1. Создайте массив с 10-ю переменными целочисленного типа. Далее найдите дубликаты и выведите их количество.
Пример: есть массив {2, 3, 5, 7, 6, 5, 7, 3, 7, 20} - в данном массиве цифра 3 и 7 повторяются.
В результате выполнения программы на экран должно вывести:
[3] - повторений 2
[7] - повторений 3

2. Написать программу, определяющую образуют ли цифры некоторого числа строго возрастающую последовательность. Например: 123 – образуют, 212 – не образуют.	

3. Необходимо создать классы, описывающие Банкомат. Набор купюр, находящихся в банкомате, должен задаваться тремя свойствами: количеством купюр номиналом 20, 50 и 100. 
Создайте интерфейсы, которые описывают методы добавления и снятия денег в банкомате.
На вход передается сумма денег, например, 150. В этом методе вы распределяете сумму по номиналам. 
Если пришло 150, то в итоге вам нужно 1 раз добавить в/отнять из переменной, в которой хранится количество купюр по 100, и 1 раз добавить в/отнять из переменной с количеством купюр по 50.
Сумму распределяем так, чтобы максимально заполнить бОльшими купюрами. Обработайте ситуацию с суммой не кратной нашим номиналам.
Создайте интерфейсы, описывающие методы для вывода количества денег в банкомате, один выводит сумму всех денег, другой количество купюр каждого номинала.
Создайте интерфейсы с методомами, которые печатают название банка и название производителя банкомата.
Реализуйте базовый абстрактный банкомат с основными возможностями на ваше усмотрение.
И, наконец, создайте класс самого банкомата, например, какого-то конкретного банка, он должен реализовывать нужные интерфейсы и наследоваться от базового абстрактного банкомата.
В этом задании у вас есть возможность самостоятельно придумать логику того, какие класссы какие интерфейсы будут реализовывать.
Постарайтесь сделать максимально модульно, чтобы когда другой банк попросит сделать для них свой банкомат, вы могли быстро все реализовать.

4. "Вам необходимо разработать модуль системы проектирования помещений. У помещения есть такие параметры как площадь и освещенность.
Известно, что предметы в помещении не должны занимать более 70% площади. Также известно, что освещенность помещения не должна выходить за пределы 300-4000 лк.
Каждое окно даёт освещенность помещения 700 лк, каждая лампочка даёт такую освещенность, как указано в её параметрах.
Создайте структуру классов и интерфейсов, позволяющую создавать здания, состоящие из помещений. Сами помещения создаются с указанием их площади и количества окон.
Для помещений можем добавлять произвольное количество лампочек, безусловно, пока не будет превышена максимальная освещённость в 4000 лк. 
И также можем добавлять произвольное количество различных предметов, пока их суммарная площадь не превышает 70% площади помещения.
При попытке превысить освещённость должно быть порождено исключение IlluminanceLimitException.
А при попытке превысить 70% площади добавляемым предметом должно быть порождено исключение SpaceLimitException.
Предполагается, что использовать вашу библиотеку будут примерно так:
 
Здание здание = new Здание(""Здание 1"");
здание.добавитьКомнату(""Комната 1"", 100, 3); //100 - площадь, 3 - количество окон
здание.добавитьКомнату(""Комната 2"", 5, 2);
здание.добавить(1, new Лампочка(150)); //1 - индекс команты в массиве
здание.добавить(1, new Лампочка(250));
здание.добавить(1, new Стол(""Стол письменный"", 3)); //3 - занимаемая предметом площадь
здание.добавить(1, new КреслоМягкое(""Кресло мягкое и пушистое"", 10));
здание.информация();
 
Пример вывода здание.информация():
Здание 1
 Комната 1
  Освещённость = 2500 (3 окна по 700 лк, лампочки 150 лк и 250 лк)
  Площадь = 100 м^2 (занято 13 м^2, свободно 87 м^2 или 87% площади)
  Мебель:
   Стол письменный (площадь 3 м^2)
   Кресло мягкое и пушистое (площадь 10 м^2)
 Комната 2
  Освещённость = 1400 (2 окна по 700 лк)
  Площадь = 5 м^2 (свободно 100%)
  Мебели нет"																																																																											